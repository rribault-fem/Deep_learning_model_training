_target_ : torchydra_fem.Preprocessing.Preprocessing
  # Split transform step : split the dataset into a training and a test set
  # Then transform the xr:datasets into numpy arrays

defaults :
 - _self_
 - inputs_outputs : Demosath_ts_to_env.yaml


feature_eng : 
  _target_ : torchydra_fem.preprocessing.feature_eng.FeatureEng      
  sin_cos_method: get_cos_sin_from_angle           # Name of the method to use for the feature engineering (cf.py file) : current option available
  angles :                                           # Environmental direction dictionary
    - simu_V_MRU_Roll
    - simu_V_MRU_Pitch
    - simu_V_MRU_Heading
    - simu_V_ST_TrueNacelleDir
    - simu_V_ST_TrueWindDir

split_transform : 
  _target_ : torchydra_fem.preprocessing.split_transform.Split_transform 
  test_nb : 50                                          # Number of test samples and clusters
  cluster: 4                                              # Number of clusters. Not used here.                          
  split_method : find_test_set_in_model_validity_domain # Name of the method to use for the split (cf.py file) : current option available
  cut_low_frequency: 0.02857142857                      # Reduced frequency range for training. If PCA not performed, nb of frequency shall be a 2**x
  envir_bin :                                           # Environment variables used to pre-define the validity domain of the model
    simu_hs: 1
    simu_tp: 2
    simu_dp: 45
    simu_cur: 10
  train_set_start_date : '2023-04-12 00'
  train_set_end_date : '2024-05-20 23'
  val_set_start_date : '2023-12-04 00'
  val_set_end_date : '2024-04-11 23'
input_scaler:                                             # Environmental direction dictionary
  _target_: torchydra_fem.preprocessing.scaler.Scaler_2D                   # The target class that will be instanciated thanks to hydra
  scaler_option : MinMaxScaler 
perform_decomp : False                                      # If true, perform PCA or another decomposition on the y spectrum. If false use cut the frequency range to get 512 frequencies values.
decomp_y_spectrum :
  _target_ : torchydra_fem.preprocessing.decomp_y_spectrum.Decomp_y_spectrum
  decomp_option : PCA                                     # name of the method to use for the decomposition (cf.py file) : current option available PCA or ICA
  decomp_n_component : 48
output_scaler :
  _target_ : torchydra_fem.preprocessing.scaler.Scaler_1D
  donot_scale : False                                      # If true, do not scale the output
  scaler_option : MinMaxScaler                            # name of the method to use for the scaling (cf.py file) : any scaler availeble in sklearn preprocessing module.
